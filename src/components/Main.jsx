// Importa√ß√µes necess√°rias do React
import React, { useState, useEffect } from "react";
// Importa√ß√£o de todos os componentes da aplica√ß√£o
import ConfirmarEmail from "./ConfirmarEmail";        // Confirma√ß√£o de email ap√≥s cadastro
import LoginForm from "./LoginForm";                  // Formul√°rio de login
import RecuperarSenha from "./RecuperarSenha";        // Formul√°rio para recuperar senha
import RedefinirSenha from "./RedefinirSenha";        // Formul√°rio para redefinir senha
import CadastroForm from "./CadastroForm";            // Formul√°rio de cadastro
import PerfilCliente from "./Perfil/PerfilCliente";   // Perfil do cliente
import PerfilMassoterapeuta from "./Perfil/PerfilMassoterapeuta"; // Perfil do massoterapeuta
import AgendamentosCliente from "./Agendamentos/AgendamentosCliente"; // Agendamentos do cliente
import AgendamentosMassoterapeuta from "./Agendamentos/AgendamentosMassoterapeuta"; // Agendamentos do massoterapeuta
import GerenciarClientes from "./GerenciarClientes";  // Gerenciamento de clientes (massoterapeuta)
import Especialidades from "./Especialidades";       // P√°gina de especialidades
import Contato from "./Contato";                     // P√°gina de contato
import PaginaInicial from "./PaginaInicial";         // P√°gina inicial da aplica√ß√£o
import "../App.css";                                 // Estilos globais

// Componente principal que gerencia toda a navega√ß√£o e roteamento da aplica√ß√£o
// Recebe como props: usuario (dados do usu√°rio logado), login e logout (fun√ß√µes de autentica√ß√£o)
function Main({ usuario, login, logout }) {
  // Estado que controla qual se√ß√£o/p√°gina est√° sendo exibida atualmente
  const [secaoAtual, setSecaoAtual] = useState("");
  // Estado que controla se o formul√°rio de cadastro est√° sendo exibido
  const [mostrarCadastro, setMostrarCadastro] = useState(false);
  // Estado que controla se o formul√°rio de recupera√ß√£o de senha est√° sendo exibido
  const [mostrarRecuperar, setMostrarRecuperar] = useState(false);

  // Effect que escuta eventos customizados para mudan√ßa de se√ß√£o
  // Permite que outros componentes alterem a se√ß√£o atual atrav√©s de eventos
  useEffect(() => {
    // Handler que captura o evento customizado e atualiza a se√ß√£o atual
    const handler = (e) => setSecaoAtual(e.detail);
    // Adiciona o listener para o evento "mostrarSecao"
    window.addEventListener("mostrarSecao", handler);
    // Cleanup: remove o listener quando o componente √© desmontado
    return () => window.removeEventListener("mostrarSecao", handler);
  }, []);

  // Effect que reseta a se√ß√£o atual quando um usu√°rio faz login
  // Isso garante que o usu√°rio seja direcionado para a tela apropriada ap√≥s o login
  useEffect(() => {
    if (usuario) {
      // Limpa a se√ß√£o atual para mostrar a interface padr√£o do usu√°rio logado
      setSecaoAtual("");
    }
  }, [usuario]); // Executa sempre que o estado 'usuario' mudar

  // Extrai o tipo de usu√°rio (cliente ou massoterapeuta) dos dados do usu√°rio
  const tipoUsuario = usuario?.tipo;

  // Detecta se a URL atual √© uma rota de confirma√ß√£o de email
  // Verifica se o pathname come√ßa com "/confirmar-email/"
  const isConfirmarEmail = window.location.pathname.startsWith("/confirmar-email/");
  
  // Detecta se h√° um token de redefini√ß√£o de senha na URL
  // Cria um objeto URLSearchParams para analisar os par√¢metros da query string
  const urlParams = new URLSearchParams(window.location.search);
  // Extrai o token da query string
  const tokenRedefinir = urlParams.get("token");
  // Verifica se √© uma p√°gina de redefini√ß√£o de senha com token v√°lido
  const isRedefinirSenha = window.location.pathname.startsWith("/redefinir-senha") && tokenRedefinir;

  // Renderiza√ß√£o do componente Main
  return (
    <>
      {/* Cabe√ßalho da aplica√ß√£o com t√≠tulo e navega√ß√£o */}
      <header>
        {/* T√≠tulo principal da aplica√ß√£o que funciona como bot√£o home */}
        <h1
          style={{ cursor: "pointer" }}
          onClick={() => {
            // L√≥gica de navega√ß√£o baseada no tipo de usu√°rio
            if (!usuario) setSecaoAtual(""); // P√°gina inicial p√∫blica se n√£o logado
            else if (tipoUsuario === "cliente") setSecaoAtual("perfil"); // Cliente vai para perfil
            else if (tipoUsuario === "massoterapeuta") setSecaoAtual("agendamentos"); // Massoterapeuta vai para agendamentos
          }}
        >
          HM Massoterapia
        </h1>
        
        {/* Menu de navega√ß√£o que muda conforme o estado de autentica√ß√£o */}
        <nav>
          {/* Menu para usu√°rios n√£o logados - mostra op√ß√µes p√∫blicas */}
          {!usuario && (
            <>
              {/* Link para p√°gina inicial */}
              <a onClick={() => setSecaoAtual("")}>In√≠cio</a>
              {/* Link para p√°gina de especialidades */}
              <a onClick={() => setSecaoAtual("especialidades")}>Especialidades</a>
              {/* Link para p√°gina de contato */}
              <a onClick={() => setSecaoAtual("contato")}>Contato</a>
              {/* Link para login (tamb√©m esconde cadastro se estiver aberto) */}
              <a onClick={() => { setSecaoAtual("login"); setMostrarCadastro(false); }}>Login</a>
            </>
          )}
          
          {/* Menu espec√≠fico para clientes logados */}
          {usuario && tipoUsuario === "cliente" && (
            <>
              {/* Link para agendamentos do cliente */}
              <a 
                onClick={() => setSecaoAtual("agendamentos")}
              >
                üìÖ Agendamentos
              </a>
              {/* Link para perfil do cliente */}
              <a 
                onClick={() => setSecaoAtual("perfil")}
              >
                üë§ Perfil
              </a>
              {/* Bot√£o de logout */}
              <a 
                onClick={logout}
                className="cliente"
              >
                üö™ Sair
              </a>
            </>
          )}
          
          {/* Menu espec√≠fico para massoterapeutas logados */}
          {usuario && tipoUsuario === "massoterapeuta" && (
            <>
              {/* Link para gerenciar clientes */}
              <a 
                onClick={() => setSecaoAtual("clientes")}
              >
                üë• Clientes
              </a>
              {/* Link para agendamentos do massoterapeuta */}
              <a 
                onClick={() => setSecaoAtual("agendamentos")}
              >
                üìÖ Agendamentos
              </a>
              {/* Link para perfil do massoterapeuta */}
              <a 
                onClick={() => setSecaoAtual("perfil")}
              >
                üë§ Perfil
              </a>
              {/* Bot√£o de logout */}
              <a 
                onClick={logout}
              >
                üö™ Sair
              </a>
            </>
          )}
        </nav>
      </header>

      {/* Conte√∫do principal que muda conforme a se√ß√£o selecionada */}
      <main>
        {/* Verifica primeiro se √© uma p√°gina especial (confirma√ß√£o de email) */}
        {isConfirmarEmail ? (
          // P√°gina de confirma√ß√£o de email com callback para voltar ao login
          <ConfirmarEmail voltarLogin={() => { 
            setSecaoAtual("login"); 
            setMostrarCadastro(false); 
            window.history.replaceState({}, '', '/'); 
          }} />
        ) : isRedefinirSenha ? (
          // P√°gina de redefini√ß√£o de senha com token e callback de sucesso
          <RedefinirSenha token={tokenRedefinir} onRedefinido={() => {
            setSecaoAtual("login");
            setMostrarCadastro(false);
            window.history.replaceState({}, '', '/');
          }} />
        ) : mostrarRecuperar ? (
          // P√°gina de recupera√ß√£o de senha com callback para voltar
          <RecuperarSenha onVoltar={() => setMostrarRecuperar(false)} />
        ) : (
          // Conte√∫do principal baseado na se√ß√£o atual
          <>
            {/* Se√ß√£o de Login e Cadastro */}
            {secaoAtual === "login" && !mostrarCadastro && (
              // Formul√°rio de login com callbacks para cadastro e recupera√ß√£o
              <LoginForm 
                login={login} 
                abrirCadastro={() => setMostrarCadastro(true)} 
                abrirRecuperarSenha={() => setMostrarRecuperar(true)} 
              />
            )}
            {secaoAtual === "login" && mostrarCadastro && (
              // Formul√°rio de cadastro com callback para voltar ao login
              <CadastroForm voltarLogin={() => setMostrarCadastro(false)} />
            )}

            {/* Se√ß√µes de Perfil baseadas no tipo de usu√°rio */}
            {secaoAtual === "perfil" && tipoUsuario === "cliente" && (
              // Perfil do cliente com dados e token de autentica√ß√£o
              <PerfilCliente usuario={usuario.usuario} token={usuario.token} />
            )}
            {secaoAtual === "perfil" && tipoUsuario === "massoterapeuta" && (
              // Perfil do massoterapeuta com dados e token de autentica√ß√£o
              <PerfilMassoterapeuta usuario={usuario.usuario} token={usuario.token} />
            )}

            {/* Se√ß√µes de Agendamentos baseadas no tipo de usu√°rio */}
            {secaoAtual === "agendamentos" && tipoUsuario === "cliente" && (
              // Agendamentos do cliente com dados e token de autentica√ß√£o
              <AgendamentosCliente usuario={usuario.usuario} token={usuario.token} />
            )}
            {secaoAtual === "agendamentos" && tipoUsuario === "massoterapeuta" && (
              // Agendamentos do massoterapeuta com dados e token de autentica√ß√£o
              <AgendamentosMassoterapeuta usuario={usuario.usuario} token={usuario.token} />
            )}

            {/* Se√ß√£o de Gerenciamento de Clientes (apenas para massoterapeutas) */}
            {secaoAtual === "clientes" && tipoUsuario === "massoterapeuta" && (
              // Gerenciamento de clientes com pesquisa e exclus√£o
              <GerenciarClientes usuario={usuario.usuario} token={usuario.token} />
            )}

            {/* Se√ß√µes p√∫blicas acess√≠veis sem login */}
            {secaoAtual === "especialidades" && <Especialidades />}
            {secaoAtual === "contato" && <Contato />}
            
            {/* P√°gina inicial - mostrada quando nenhuma se√ß√£o est√° selecionada e usu√°rio n√£o est√° logado */}
            {secaoAtual === "" && !usuario && <PaginaInicial />}
          </>
        )}
      </main>
    </>
  );
}

// Exporta√ß√£o do componente para uso em outros arquivos
export default Main;